{"version":3,"sources":["webpack:///src/app/features/home/photo/photo-routing.module.ts","webpack:///src/app/features/home/photo/photo.module.ts","webpack:///src/app/features/home/photo/photo.page.html","webpack:///src/app/features/home/photo/photo.page.ts"],"names":["routes","path","component","PhotoPageRoutingModule","forChild","PhotoPageModule","PhotoPage","momentRepository","route","router","sanitizer","httpClient","languagesService","_ionSlides$","undefined","ionSlides$","pipe","currentMemontId$","queryParamMap","params","get","moments$","all$","currentMomentIndex$","moments","id","findIndex","j","currentMoment$","currentIndex","geolocationPosition$","moment","geolocationPosition","address$","language$","position","language","latitude","longitude","json","features","length","properties","mapUrl$","bypassSecurityTrustResourceUrl","photoSlidesOptions$","initialIndex","resistanceRatio","initialSlide","slideToMoment$","slides","index","slideTo","subscribe","value","next","_","item","event","ionSlides","target","getActiveIndex","navigate","queryParams","relativeTo","replaceUrl","remove$","remove"],"mappings":"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","file":"4-es5.6e0faac9b402d4f1fff7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PhotoPage } from './photo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhotoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PhotoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { PhotoPageRoutingModule } from './photo-routing.module';\nimport { PhotoPage } from './photo.page';\n\n@NgModule({\n  imports: [SharedModule, PhotoPageRoutingModule, NgxIonicImageViewerModule],\n  declarations: [PhotoPage],\n})\nexport class PhotoPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button color=\"light\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"remove()\" slot=\"primary\" color=\"light\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n      <ion-button slot=\"secondary\" color=\"light\">\n        <ion-icon name=\"share-social-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content fullscreen *transloco=\"let t\">\n  <ion-slides\n    #slides\n    *ngrxLet=\"photoSlidesOptions$ as options\"\n    [options]=\"options\"\n    (ionSlideDidChange)=\"onPhotoSlidesChanged($event)\"\n  >\n    <ion-slide *ngFor=\"let moment of moments$ | ngrxPush; trackBy: trackMoment\">\n      <app-image\n        *ngrxLet=\"moment.photoUrl$ as photoUrl\"\n        ionImgViewer\n        [src]=\"photoUrl\"\n      ></app-image>\n\n      <ion-list lines=\"none\">\n        <ion-item>\n          <ion-label>\n            {{\n              moment.timestamp\n                | translocoDate: { dateStyle: 'full', timeStyle: 'full' }\n            }}\n          </ion-label>\n        </ion-item>\n        <ion-item-group *ngIf=\"moment.geolocationPosition\">\n          <ion-item-divider>\n            <ion-label>{{ t('location') }}</ion-label>\n          </ion-item-divider>\n          <iframe\n            *ngrxLet=\"mapUrl$ as mapUrl\"\n            [src]=\"mapUrl\"\n            frameborder=\"0\"\n            loading=\"lazy\"\n          ></iframe>\n          <ion-item>\n            <ion-icon name=\"location-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('coordinates') }}</h3>\n              <p>\n                {{ moment.geolocationPosition?.latitude }}\n                ,\n                {{ moment.geolocationPosition?.longitude }}\n              </p>\n            </ion-label>\n          </ion-item>\n          <ion-item>\n            <ion-icon name=\"home-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('address') }}</h3>\n              <p>{{ address$ | ngrxPush }}</p>\n            </ion-label>\n          </ion-item>\n        </ion-item-group>\n\n        <ion-item-group>\n          <ion-item-divider>\n            <ion-label>{{ t('details') }}</ion-label>\n          </ion-item-divider>\n          <ion-item>\n            <ion-icon name=\"code-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('hash') }}</h3>\n              <p>{{ moment.id }}</p>\n            </ion-label>\n          </ion-item>\n          <ion-item>\n            <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('mimeType') }}</h3>\n              <p>{{ moment.mimeType }}</p>\n            </ion-label>\n          </ion-item>\n        </ion-item-group>\n      </ion-list>\n    </ion-slide>\n  </ion-slides>\n</ion-content>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IonSlides } from '@ionic/angular';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FeatureCollection } from 'geojson';\nimport { BehaviorSubject, combineLatest, defer } from 'rxjs';\nimport {\n  concatMap,\n  concatMapTo,\n  distinctUntilChanged,\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport { LanguagesService } from '../../../shared/languages/languages.service';\nimport { Moment } from '../../../shared/moment/moment';\nimport { MomentRepository } from '../../../shared/moment/moment-repository.service';\nimport { isNonNullable } from '../../../utils/rx-operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.page.html',\n  styleUrls: ['./photo.page.scss'],\n})\nexport class PhotoPage {\n  private readonly _ionSlides$ = new BehaviorSubject<undefined | IonSlides>(\n    undefined\n  );\n\n  @ViewChild('slides') set ionSlides(value: IonSlides) {\n    this._ionSlides$.next(value);\n  }\n\n  private readonly ionSlides$ = this._ionSlides$.pipe(\n    isNonNullable(),\n    distinctUntilChanged()\n  );\n\n  private readonly currentMemontId$ = this.route.queryParamMap.pipe(\n    map(params => params.get('id')),\n    isNonNullable(),\n    distinctUntilChanged()\n  );\n\n  readonly moments$ = this.momentRepository.all$;\n\n  private readonly currentMomentIndex$ = combineLatest([\n    this.moments$,\n    this.currentMemontId$,\n  ]).pipe(\n    map(([moments, id]) => moments.findIndex(j => j.id === id)),\n    distinctUntilChanged()\n  );\n\n  readonly currentMoment$ = combineLatest([\n    this.moments$,\n    this.currentMomentIndex$,\n  ]).pipe(map(([moments, currentIndex]) => moments[currentIndex]));\n\n  private readonly geolocationPosition$ = this.currentMoment$.pipe(\n    map(moment => moment.geolocationPosition),\n    isNonNullable()\n  );\n\n  readonly address$ = combineLatest([\n    this.geolocationPosition$,\n    this.languagesService.language$,\n  ]).pipe(\n    switchMap(([position, language]) =>\n      this.httpClient.get<FeatureCollection>(\n        `https://nominatim.openstreetmap.org/reverse?lat=${position.latitude}&lon=${position.longitude}&format=geojson&accept-language=${language}`\n      )\n    ),\n    map(json => {\n      if (json.features.length === 0) return undefined;\n      const properties = json.features[0].properties;\n      if (!properties) return undefined;\n      return properties['display_name'] as string | undefined;\n    })\n  );\n\n  readonly mapUrl$ = this.geolocationPosition$.pipe(\n    map(position =>\n      this.sanitizer.bypassSecurityTrustResourceUrl(\n        `https://maps.google.com/maps?q=${position.latitude},${position.longitude}&z=15&output=embed`\n      )\n    ),\n    isNonNullable()\n  );\n\n  readonly photoSlidesOptions$ = this.currentMomentIndex$.pipe(\n    map(initialIndex => ({\n      resistanceRatio: 0,\n      initialSlide: initialIndex,\n    }))\n  );\n\n  private readonly slideToMoment$ = combineLatest([\n    this.ionSlides$,\n    this.currentMomentIndex$,\n  ]).pipe(switchMap(([slides, index]) => slides.slideTo(index)));\n\n  constructor(\n    private readonly momentRepository: MomentRepository,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly sanitizer: DomSanitizer,\n    private readonly httpClient: HttpClient,\n    private readonly languagesService: LanguagesService\n  ) {\n    this.slideToMoment$.pipe(untilDestroyed(this)).subscribe();\n  }\n\n  trackMoment(_: number, item: Moment) {\n    return item.id;\n  }\n\n  onPhotoSlidesChanged(event: Event) {\n    const ionSlides = event.target as HTMLIonSlidesElement;\n    return this.moments$\n      .pipe(\n        switchMap(\n          async moments => moments[await ionSlides.getActiveIndex()].id\n        ),\n        switchMap(id =>\n          this.router.navigate([], {\n            queryParams: { id },\n            relativeTo: this.route,\n            replaceUrl: true,\n          })\n        ),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n\n  remove() {\n    return this.currentMemontId$\n      .pipe(\n        concatMap(id => this.momentRepository.remove$(id)),\n        concatMapTo(defer(() => this.router.navigate(['..']))),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n}\n"]}