{"version":3,"sources":["webpack:///src/app/features/home/photo/photo-routing.module.ts","webpack:///src/app/features/home/photo/photo.module.ts","webpack:///src/app/features/home/photo/photo.page.html","webpack:///src/app/features/home/photo/photo.page.ts"],"names":["routes","path","component","PhotoPageRoutingModule","forChild","PhotoPageModule","PhotoPage","momentRepository","route","router","sanitizer","httpClient","languagesService","willBeDestroyed","currentMemontId$","queryParamMap","pipe","params","get","moments$","all$","currentMomentIndex$","moments","id","findIndex","moment","currentMoment$","currentIndex","geolocationPosition$","geolocationPosition","address$","language$","position","language","latitude","longitude","json","features","length","undefined","properties","mapUrl$","bypassSecurityTrustResourceUrl","photoSlidesOptions$","initialIndex","resistanceRatio","initialSlide","supportShare","navigator","_","item","event","ionSlides","target","getActiveIndex","navigate","queryParams","relativeTo","replaceUrl","skipLocationChange","subscribe","remove$","_share$","photo$","photo","File","getExtension","mimeType","type","lastModified","timestamp","file","share","text","JSON","stringify","files","remove"],"mappings":"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","file":"5-es5.2eb6274072954107eb78.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PhotoPage } from './photo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PhotoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PhotoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { PhotoPageRoutingModule } from './photo-routing.module';\nimport { PhotoPage } from './photo.page';\n\n@NgModule({\n  imports: [SharedModule, PhotoPageRoutingModule, NgxIonicImageViewerModule],\n  declarations: [PhotoPage],\n})\nexport class PhotoPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button color=\"light\"></ion-back-button>\n    </ion-buttons>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"remove()\" slot=\"primary\" color=\"light\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n      <ion-button\n        *ngrxLet=\"currentMoment$ as currentMoment\"\n        [href]=\"currentMoment.photoUrl$ | ngrxPush\"\n        target=\"_blank\"\n        [download]=\"\n          currentMoment.id + '.' + (currentMoment.mimeType | extension)\n        \"\n        slot=\"secondary\"\n        color=\"light\"\n      >\n        <ion-icon name=\"download-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n      <ion-button\n        *ngIf=\"supportShare\"\n        (click)=\"share()\"\n        slot=\"secondary\"\n        color=\"light\"\n      >\n        <ion-icon name=\"share-social-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content fullscreen *transloco=\"let t\">\n  <ion-slides\n    *ngrxLet=\"photoSlidesOptions$ as options\"\n    [options]=\"options\"\n    (ionSlideDidChange)=\"onPhotoSlidesChanged($event)\"\n  >\n    <ion-slide *ngFor=\"let moment of moments$ | ngrxPush; trackBy: trackMoment\">\n      <app-image\n        *ngrxLet=\"moment.photoUrl$ as photoUrl\"\n        ionImgViewer\n        [src]=\"photoUrl\"\n      ></app-image>\n\n      <ion-list lines=\"none\">\n        <ion-item>\n          <ion-label>\n            {{\n              moment.timestamp\n                | translocoDate: { dateStyle: 'full', timeStyle: 'full' }\n            }}\n          </ion-label>\n        </ion-item>\n        <ion-item-group *ngIf=\"moment.geolocationPosition\">\n          <ion-item-divider>\n            <ion-label>{{ t('location') }}</ion-label>\n          </ion-item-divider>\n          <iframe\n            *ngrxLet=\"mapUrl$ as mapUrl\"\n            [src]=\"mapUrl\"\n            frameborder=\"0\"\n            loading=\"lazy\"\n          ></iframe>\n          <ion-item>\n            <ion-icon name=\"location-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('coordinates') }}</h3>\n              <p>\n                {{ moment.geolocationPosition?.latitude }}\n                ,\n                {{ moment.geolocationPosition?.longitude }}\n              </p>\n            </ion-label>\n            <app-copy-clipboard\n              [text]=\"\n                moment.geolocationPosition?.latitude +\n                ',' +\n                moment.geolocationPosition?.longitude\n              \"\n              slot=\"end\"\n            ></app-copy-clipboard>\n          </ion-item>\n          <ion-item>\n            <ion-icon name=\"home-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('address') }}</h3>\n              <p>{{ address$ | ngrxPush }}</p>\n            </ion-label>\n            <app-copy-clipboard\n              [text]=\"address$ | ngrxPush\"\n              slot=\"end\"\n            ></app-copy-clipboard>\n          </ion-item>\n        </ion-item-group>\n\n        <ion-item-group>\n          <ion-item-divider>\n            <ion-label>{{ t('details') }}</ion-label>\n          </ion-item-divider>\n          <ion-item>\n            <ion-icon name=\"code-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('hash') }}</h3>\n              <p>{{ moment.id }}</p>\n            </ion-label>\n            <app-copy-clipboard\n              [text]=\"moment.id\"\n              slot=\"end\"\n            ></app-copy-clipboard>\n          </ion-item>\n          <ion-item>\n            <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n            <ion-label>\n              <h3>{{ t('mimeType') }}</h3>\n              <p>{{ moment.mimeType }}</p>\n            </ion-label>\n            <app-copy-clipboard\n              [text]=\"moment.mimeType\"\n              slot=\"end\"\n            ></app-copy-clipboard>\n          </ion-item>\n        </ion-item-group>\n      </ion-list>\n    </ion-slide>\n  </ion-slides>\n</ion-content>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FeatureCollection } from 'geojson';\nimport mime from 'mime/lite';\nimport { combineLatest, defer, iif } from 'rxjs';\nimport {\n  concatMap,\n  concatMapTo,\n  distinctUntilChanged,\n  first,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { LanguagesService } from '../../../shared/languages/languages.service';\nimport { Moment } from '../../../shared/moment/moment';\nimport { MomentRepository } from '../../../shared/moment/moment-repository.service';\nimport { isNonNullable } from '../../../utils/rx-operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.page.html',\n  styleUrls: ['./photo.page.scss'],\n})\nexport class PhotoPage {\n  private willBeDestroyed = false;\n\n  private readonly currentMemontId$ = this.route.queryParamMap.pipe(\n    map(params => params.get('id')),\n    isNonNullable(),\n    distinctUntilChanged()\n  );\n\n  readonly moments$ = this.momentRepository.all$;\n\n  private readonly currentMomentIndex$ = combineLatest([\n    this.moments$,\n    this.currentMemontId$,\n  ]).pipe(\n    map(([moments, id]) => moments.findIndex(moment => moment.id === id)),\n    distinctUntilChanged()\n  );\n\n  readonly currentMoment$ = combineLatest([\n    this.moments$,\n    this.currentMomentIndex$,\n  ]).pipe(map(([moments, currentIndex]) => moments[currentIndex]));\n\n  private readonly geolocationPosition$ = this.currentMoment$.pipe(\n    map(moment => moment.geolocationPosition),\n    isNonNullable()\n  );\n\n  readonly address$ = combineLatest([\n    this.geolocationPosition$,\n    this.languagesService.language$,\n  ]).pipe(\n    switchMap(([position, language]) =>\n      this.httpClient.get<FeatureCollection>(\n        `https://nominatim.openstreetmap.org/reverse?lat=${position.latitude}&lon=${position.longitude}&format=geojson&accept-language=${language}`\n      )\n    ),\n    map(json => {\n      if (json.features.length === 0) return undefined;\n      const properties = json.features[0].properties;\n      if (!properties) return undefined;\n      return properties['display_name'] as string | undefined;\n    })\n  );\n\n  readonly mapUrl$ = this.geolocationPosition$.pipe(\n    map(position =>\n      this.sanitizer.bypassSecurityTrustResourceUrl(\n        `https://maps.google.com/maps?q=${position.latitude},${position.longitude}&z=15&output=embed`\n      )\n    ),\n    isNonNullable()\n  );\n\n  readonly photoSlidesOptions$ = this.currentMomentIndex$.pipe(\n    map(initialIndex => ({\n      resistanceRatio: 0,\n      initialSlide: initialIndex,\n    }))\n  );\n\n  readonly supportShare = !!navigator['share'];\n\n  constructor(\n    private readonly momentRepository: MomentRepository,\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly sanitizer: DomSanitizer,\n    private readonly httpClient: HttpClient,\n    private readonly languagesService: LanguagesService\n  ) {}\n\n  trackMoment(_: number, item: Moment) {\n    return item.id;\n  }\n\n  onPhotoSlidesChanged(event: Event) {\n    const ionSlides = event.target as HTMLIonSlidesElement;\n    return this.moments$\n      .pipe(\n        first(),\n        switchMap(async moments => moments[await ionSlides.getActiveIndex()]),\n        isNonNullable(),\n        switchMap(moment =>\n          iif(\n            () => !this.willBeDestroyed,\n            this.router.navigate([], {\n              queryParams: { id: moment.id },\n              relativeTo: this.route,\n              replaceUrl: true,\n              skipLocationChange: true,\n            })\n          )\n        ),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n\n  remove() {\n    return this.currentMemontId$\n      .pipe(\n        first(),\n        tap(() => (this.willBeDestroyed = true)),\n        concatMap(id => this.momentRepository.remove$(id)),\n        concatMapTo(defer(() => this.router.navigate(['..']))),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n\n  share() {\n    return this.currentMoment$\n      .pipe(\n        first(),\n        switchMap(moment => this._share$(moment)),\n        untilDestroyed(this)\n      )\n      .subscribe();\n  }\n\n  private _share$(moment: Moment) {\n    return moment.photo$.pipe(\n      map(\n        photo =>\n          new File(\n            [photo],\n            //@ts-expect-error: https://github.com/broofa/mime/issues/255\n            `${moment.id}.${mime.getExtension(moment.mimeType)}`,\n            {\n              type: moment.mimeType,\n              lastModified: moment.timestamp,\n            }\n          )\n      ),\n      switchMap(file =>\n        navigator.share({\n          text: JSON.stringify(moment.geolocationPosition),\n          // @ts-expect-error: share API level 2\n          files: [file],\n        })\n      )\n    );\n  }\n}\n"]}